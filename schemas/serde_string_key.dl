// Souffle schema for tables generated by Serde Datalog

.type ElemId <: number
.type ElemType <: symbol
.type Field <: symbol
.type TypeName <: symbol
.type VariantName <: symbol

.decl type(id: ElemId, type: ElemType)
.decl bool(id: ElemId, value: number)
.decl number(id: ElemId, value: number)
.decl string(id: ElemId, value: symbol)
.decl map(id: ElemId, key: symbol, value: ElemId)
.decl struct(id: ElemId, field: Field, value: ElemId)
.decl seq(id: ElemId, pos: number, value: ElemId)
.decl tuple(id: ElemId, pos: number, value: ElemId)
.decl structType(id: ElemId, type: TypeName)
.decl variantType(id: ElemId, type: TypeName, variant: VariantName)

// Property that holds when `id` is the root element of a data structure;
// that is, the element is not referenced by any other element.
.decl rootElem(id: ElemId)
rootElem(id) :-
    type(id, _),
    !map(_, _, id),
    !struct(_, _, id),
    !seq(_, _, id),
    !tuple(_, _, id).
